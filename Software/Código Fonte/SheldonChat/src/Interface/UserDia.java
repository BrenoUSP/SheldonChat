/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Interface;

import Controle.Bot;
import Controle.Logs;
import Controle.Paciente;
import java.awt.Cursor;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.InputStreamReader;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ALUNO 09
 */
public class UserDia extends javax.swing.JFrame {

    Logs logs;
    Paciente paciente;
    Bot bot;
    /**
     * Creates new form UserDia
     */
    public UserDia(Logs logs, Paciente paciente, Bot bot) {
        URL imageUrl = this.getClass().getResource("/Imagens/frameIcon.png");
        ImageIcon img = new ImageIcon(imageUrl);
        setIconImage(img.getImage());
        this.setLogs(logs);
        this.setPaciente(paciente);
        this.setBot(bot);

        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        SCA13ProjectPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("SCA13ProjectPU").createEntityManager();
        logsQuery = java.beans.Beans.isDesignTime() ? null : SCA13ProjectPUEntityManager.createQuery("SELECT l FROM Logs l");
        logsList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(logsQuery.getResultList());
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaLog = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaAnotacao = new javax.swing.JTextArea();
        jButtonAtualizar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableLog = new javax.swing.JTable();
        jLabelVoltar = new javax.swing.JLabel();
        jButtonHelp = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Diálogo do Dia"));

        jTextAreaLog.setEditable(false);
        jTextAreaLog.setColumns(20);
        jTextAreaLog.setRows(5);
        jScrollPane3.setViewportView(jTextAreaLog);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Anotação do Responsável para o Dia"));

        jTextAreaAnotacao.setColumns(20);
        jTextAreaAnotacao.setRows(5);
        jScrollPane1.setViewportView(jTextAreaAnotacao);

        jButtonAtualizar.setText("Salvar Anotação");
        jButtonAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(300, 300, 300)
                .addComponent(jButtonAtualizar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonAtualizar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, logsList, jTableLog);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Long.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${data}"));
        columnBinding.setColumnName("Data");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nomePaciente}"));
        columnBinding.setColumnName("Nome Paciente");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${enderecoPaciente}"));
        columnBinding.setColumnName("Endereco Paciente");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${enderecoResponsavel}"));
        columnBinding.setColumnName("Endereco Responsavel");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jTableLog.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableLogMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableLogMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTableLog);
        if (jTableLog.getColumnModel().getColumnCount() > 0) {
            jTableLog.getColumnModel().getColumn(0).setResizable(false);
            jTableLog.getColumnModel().getColumn(1).setResizable(false);
            jTableLog.getColumnModel().getColumn(2).setResizable(false);
            jTableLog.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabelVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/back.png"))); // NOI18N
        jLabelVoltar.setText("Voltar");
        jLabelVoltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelVoltarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelVoltarMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelVoltarMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabelVoltarMousePressed(evt);
            }
        });

        jButtonHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/help.png"))); // NOI18N

        jLabel4.setText("Ajuda");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane2))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(322, 322, 322)
                .addComponent(jLabelVoltar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(290, 290, 290)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonHelp)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(480, Short.MAX_VALUE)))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtualizarActionPerformed
        try {
            getLogs().encontradoId(Long.parseLong(jTableLog.getModel().getValueAt(jTableLog.convertRowIndexToModel(jTableLog.getSelectedRow()), 0).toString()));
            File file = new File(getLogs().getEnderecoResponsavel());
            file.createNewFile();
            BufferedWriter output = new BufferedWriter(new FileWriter(file));
            output.write(this.jTextAreaAnotacao.getText());
            output.close();
            JOptionPane.showMessageDialog(null, "Anotação salva!", "Atualização", 1);
        } catch (Exception e) {

        }
    }//GEN-LAST:event_jButtonAtualizarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        setTitle("Logs e Anotações diárias - Paciente " + getPaciente().getNomePaciente());
        
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(jTableLog.getModel());
        jTableLog.setRowSorter(sorter);

        RowFilter<TableModel, Object> rf = null;

        try {
            rf = RowFilter.regexFilter(getPaciente().getNomePaciente(), 2);
        } catch (java.util.regex.PatternSyntaxException e) {
            return;
        }
        sorter.setRowFilter(rf);
        
        this.jTableLog.setRowSelectionInterval(0, 0);
        
        try {
            FileInputStream fstream = new FileInputStream(jTableLog.getModel().getValueAt(jTableLog.convertRowIndexToModel(jTableLog.getSelectedRow()), 3).toString());
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            String texto = "";
            while ((strLine = br.readLine()) != null) {
                texto += strLine + "\n";
            }
            jTextAreaLog.setLineWrap(true);
            jTextAreaLog.setWrapStyleWord(true);
            this.jTextAreaLog.setText(texto);
            in.close();

            FileInputStream fstream2 = new FileInputStream(jTableLog.getModel().getValueAt(jTableLog.convertRowIndexToModel(jTableLog.getSelectedRow()), 4).toString());
            DataInputStream in2 = new DataInputStream(fstream2);
            BufferedReader br2 = new BufferedReader(new InputStreamReader(in2));
            String strLine2;
            String texto2 = "";
            while ((strLine2 = br2.readLine()) != null) {
                texto2 += strLine2 + "\n";
            }
            jTextAreaAnotacao.setLineWrap(true);
            jTextAreaAnotacao.setWrapStyleWord(true);
            jTextAreaAnotacao.setText(texto2);
            in2.close();
        } catch (Exception e) {
            System.err.println("Error: " + e.getMessage());
        }
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        UserInfo userInfo = new UserInfo(getPaciente(), getBot(), getLogs());
        userInfo.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_formWindowClosed

    private void jTableLogMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableLogMouseClicked
        try {
            FileInputStream fstream = new FileInputStream(jTableLog.getModel().getValueAt(jTableLog.convertRowIndexToModel(jTableLog.getSelectedRow()), 3).toString());
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            String texto = "";
            while ((strLine = br.readLine()) != null) {
                texto += strLine + "\n";
            }
            jTextAreaLog.setLineWrap(true);
            jTextAreaLog.setWrapStyleWord(true);
            this.jTextAreaLog.setText(texto);
            in.close();

            FileInputStream fstream2 = new FileInputStream(jTableLog.getModel().getValueAt(jTableLog.convertRowIndexToModel(jTableLog.getSelectedRow()), 4).toString());
            DataInputStream in2 = new DataInputStream(fstream2);
            BufferedReader br2 = new BufferedReader(new InputStreamReader(in2));
            String strLine2;
            String texto2 = "";
            while ((strLine2 = br2.readLine()) != null) {
                texto2 += strLine2 + "\n";
            }
            jTextAreaAnotacao.setLineWrap(true);
            jTextAreaAnotacao.setWrapStyleWord(true);
            jTextAreaAnotacao.setText(texto2);
            in2.close();
        } catch (Exception e) {
            System.err.println("Error: " + e.getMessage());
        }
    }//GEN-LAST:event_jTableLogMouseClicked

    private void jTableLogMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableLogMousePressed
        try {
            FileInputStream fstream = new FileInputStream(jTableLog.getModel().getValueAt(jTableLog.convertRowIndexToModel(jTableLog.getSelectedRow()), 3).toString());
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            String texto = "";
            while ((strLine = br.readLine()) != null) {
                texto += strLine + "\n";
            }
            jTextAreaLog.setLineWrap(true);
            jTextAreaLog.setWrapStyleWord(true);
            this.jTextAreaLog.setText(texto);
            in.close();

            FileInputStream fstream2 = new FileInputStream(jTableLog.getModel().getValueAt(jTableLog.convertRowIndexToModel(jTableLog.getSelectedRow()), 4).toString());
            DataInputStream in2 = new DataInputStream(fstream2);
            BufferedReader br2 = new BufferedReader(new InputStreamReader(in2));
            String strLine2;
            String texto2 = "";
            while ((strLine2 = br2.readLine()) != null) {
                texto2 += strLine2 + "\n";
            }
            jTextAreaAnotacao.setLineWrap(true);
            jTextAreaAnotacao.setWrapStyleWord(true);
            jTextAreaAnotacao.setText(texto2);
            in2.close();
        } catch (Exception e) {
            System.err.println("Error: " + e.getMessage());
        }
    }//GEN-LAST:event_jTableLogMousePressed

    private void jLabelVoltarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelVoltarMouseClicked
        setVisible(false);
        UserInfo userInfo = new UserInfo(getPaciente(), getBot(), getLogs());
        userInfo.setVisible(true);
    }//GEN-LAST:event_jLabelVoltarMouseClicked

    private void jLabelVoltarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelVoltarMousePressed
        setVisible(false);
        UserInfo userInfo = new UserInfo(getPaciente(), getBot(), getLogs());
        userInfo.setVisible(true);
    }//GEN-LAST:event_jLabelVoltarMousePressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        String[] options = new String[2];
        options[0] = new String("Sim");
        options[1] = new String("Não");

        if (JOptionPane.showOptionDialog(null, "Você tem certeza que quer sair do programa?", "Pergunta", 0, JOptionPane.INFORMATION_MESSAGE, null, options, null) == JOptionPane.OK_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    private void jLabelVoltarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelVoltarMouseEntered
        this.jLabelVoltar.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jLabelVoltarMouseEntered

    private void jLabelVoltarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelVoltarMouseExited
        this.jLabelVoltar.setCursor(Cursor.getPredefinedCursor(Cursor.getDefaultCursor().getType()));
    }//GEN-LAST:event_jLabelVoltarMouseExited

    /**
     * @param args the command line arguments
     */

    public void setLogs(Logs logs) {
        this.logs = logs;
    }

    public Logs getLogs() {
        return this.logs;
    }
    
    public void setBot(Bot bot) {
        this.bot = bot;
    }

    public Bot getBot() {
        return this.bot;
    }
    
    public void setPaciente(Paciente paciente) {
        this.paciente = paciente;
    }

    public Paciente getPaciente() {
        return this.paciente;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager SCA13ProjectPUEntityManager;
    private javax.swing.JButton jButtonAtualizar;
    private javax.swing.JButton jButtonHelp;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelVoltar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTableLog;
    private javax.swing.JTextArea jTextAreaAnotacao;
    private javax.swing.JTextArea jTextAreaLog;
    private java.util.List<Controle.Logs> logsList;
    private javax.persistence.Query logsQuery;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
